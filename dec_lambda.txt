#https://github.com/Azim-Vau

import base64
import marshal
DIFENT_STACK = []
(lambda ___ : sot.sort())(globals().update({(lambda : uc[i][p] ^ c[0][o] ** 5 != "").__code__.co_consts[3].join([chr(i) for i in (lambdax83273a==0x83273a)+(0b1001!=0o1663133)+(0x83273a!=0b1001))),((((((((((((0b1001>=0x83273a)+(0o1663133<0x83273a)))<<(((0x83273a<=0x83273a)+(0b1001>=0b1001)+(0o1663133!=0x83273a))))+(((0o1663133!=0x83273a)+(0b1001>0b1001)))))))))<<(((0b1001>0b1001)+(0b1001<=0b1001))))),(((((0x83273a==0x83273a)+(0b1001==0b1001)+(0b1001<=0x83273a))+((0x83273a>=0x83273a)+(0b1001<0x83273a)+(0o1663133!=0b1001))+((0b1001<=0o1663133)-(0x83273a<0b1001)))<<(((0b1001<=0o1663133)+(0x83273a<=0x83273a))))-(((0b1001!=0o1663133)*(0o1663133<=0x83273a)))))]):(lambda : [{int(c.split("$")[0])+int(c.split("$")[2]):c.split("$")[1]} for c in (lambda ___ : ___.split("@"))


(lambda : globals().update({(lambda : uc[i][p] ^ c[0][o] ** 5 != "").__code__.co_consts[3].join([chr(i) for i in (lambdao1663133!=0b1001)*(0b1001>=0b1001)))<<(((0x83273a>=0b1001)+(0x83273a!=0o1663133))+((0x83273a!=0b1001)+(0b1001!=0x83273a))))),(((((0x83273a>0o1663133)+(0o1663133<=0x83273a)+(0x83273a>0b1001))+((0x83273a==0x83273a)+(0x83273a>0b1001)+(0b1001!=0x83273a))+((0o1663133==0o1663133)+(0b1001>=0o1663133)))<<(((0b1001<0o1663133)*(0x83273a==0x83273a))))),(((((0b1001<=0o1663133)+(0o1663133<=0x83273a))+((0o1663133>0b1001)+(0x83273a<=0x83273a))+((0b1001<=0o1663133)+(0x83273a==0o1663133)))<<(((0x83273a<=0x83273a)+(0b1001!=0o1663133))))))]):(lambda cz : cz[::-1].split("&"))((lambda x : (lambda : uc[i][p] ^ c[0][o] ** 5 != "").__code__.co_consts[3].join([c[1][c[0]] for c in enumerate(x)]))(sot))}))()









